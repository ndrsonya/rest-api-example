name: Deploy to Google Cloud

on:
  push:
    branches:
      - main  # Trigger the pipeline when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Run on the latest Ubuntu environment

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}  # GitHub secret with your service account credentials

    # Step 3: Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}  # Your Google Cloud project ID


      # Step 4: Authenticate Docker to GCR (Google Container Registry)
    - name: Authenticate Docker to Artifact Registry
      run: |
        gcloud auth configure-docker europe-north1-docker.pkg.dev
    
    # Step 5: Build and push the Docker image to Artifact Registry
    - name: Build and push Docker image to Artifact Registry
      run: |
        docker buildx build --tag europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPOSITORY_NAME }}/rest-api-example:latest .
        docker push europe-north1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.ARTIFACT_REGISTRY_REPOSITORY_NAME }}/rest-api-example:latest
  
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy rest-api-example \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/rest-api-example:latest \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated \
          --set-env-vars NODE_ENV=production

