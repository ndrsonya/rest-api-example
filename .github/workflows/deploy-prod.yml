name: Deploy to Google Cloud

on:
  push:
    branches:
      - main  # Trigger the pipeline when pushing to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Run on the latest Ubuntu environment

    steps:
    # Step 1: Check out the code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}  # GitHub secret with your service account credentials

    # Step 3: Set up Google Cloud SDK
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}  # Your Google Cloud project ID
        install_components: 'docker,cloud-run'  # Install Docker and Cloud Run components

    # Step 4: Authenticate Docker to GCR (Google Container Registry)
    - name: Authenticate Docker to GCR
      run: |
        gcloud auth configure-docker gcr.io

    # Step 5: Build and push the Docker image to GCR
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/rest-api-example:latest .  # Use your project ID
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/rest-api-example:latest

    # Step 6: Deploy to Google Cloud Run
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy rest-api-example \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/rest-api-example:latest \
          --region europe-north1 \  # Set the region to Finland
          --allow-unauthenticated \
          --set-env-vars DB_HOST=${{ secrets.DB_HOST }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }},DB_NAME=${{ secrets.DB_NAME }}  # Use secrets for environment variables

    # Step 7: Run database migrations and seeds
    - name: Run Knex migrations and seeds
      run: |
        # Install dependencies (make sure knex and pg are installed)
        npm install

        # Run migrations
        npx knex migrate:latest --env production

        # Run seeds 
        npx knex seed:run --env production
      env:
        DB_CONNECTION_STRING: ${{ secrets.DB_CONNECTION_STRING }} 
        NODE_ENV: production 
