name: CI/CD Pipeline for Node.js with Docker and Knex Migrations

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Cache Docker layers for faster builds
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/rest-api-example .

    # Authenticate with Google Cloud using service account credentials
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    # Use gcloud SQL Proxy
    - name: Google cloud SQL Proxy
      uses: ahmadnassri/action-google-cloud-sql-proxy@v1
      with:
        key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        connection: ${{ secrets.GCP_CLOUD_SQL_INSTANCE }}
        port: ${{ secrets.DB_PORT }}
       
    - name: Wait for Cloud SQL Proxy to be ready
      run: |
          sleep 10 

    # Install dependencies
    - name: Install Dependencies
      run: |
        npm install

    # Run Knex Migrations
    - name: Run Knex Migrations
      run: |
        npx knex migrate:latest --env production
      env:
        DB_HOST: localhost
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_NAME: ${{ secrets.DB_NAME }}


    # Push Docker image to GCR
    - name: Push Docker image to GCR
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/rest-api-example

    # Deploy the app 
    - name: Deploy to Google Cloud
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth activate-service-account --key-file=${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        gcloud app browse  # Or use Kubernetes/GKE deploy, depending on your setup
