name: CI/CD Pipeline for Node.js with Docker and Knex Migrations

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Cache Docker layers for faster builds
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    # Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-image .

    # Authenticate with Google Cloud using service account credentials
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    # Run the Knex migrations using the Docker container
    - name: Run Knex migrations
      run: |
        docker run --rm \
          -e DB_HOST=${{ secrets.DB_HOST }} \
          -e DB_USER=${{ secrets.DB_USER }} \
          -e DB_PASS=${{ secrets.DB_PASS }} \
          -e DB_NAME=${{ secrets.DB_NAME }} \
          gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-image \
          npm run migrate

    # Push the Docker image to Google Container Registry (GCR)
    - name: Push Docker image to GCR
      run: |
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-image

    # Deploy the app (to Google Kubernetes Engine, App Engine, etc.)
    - name: Deploy to Google Cloud
      run: |
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth activate-service-account --key-file=${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        gcloud app browse  # Or use Kubernetes/GKE deploy, depending on your setup
